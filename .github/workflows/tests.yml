name: Test

on: [push, pull_request]

jobs:
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}-${{hashFiles('**/requirements.txt')}}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        sudo apt-get install -y pandoc
        python -m pip install --upgrade pip
        python -m pip install file://$PWD/python/ipywidgets#egg=ipywidgets
        python -m pip install -r ./docs/requirements.txt
    - name: Build docs
      run: |
        cd docs
        make html
  js:
    name: JavaScript
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}-${{hashFiles('**/requirements.txt')}}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        sudo apt-get install -y firefox
        python -m pip install --upgrade pip
        python -m pip install jupyterlab~=3.0
    - name: Install node
      uses: actions/setup-node@v3
      with:
        node-version: '14'
        cache: 'yarn'
    - name: yarn install, build, test
      run: |
        yarn install --frozen-lockfile
        yarn run build
        yarn run build:examples

        pushd packages/base
        yarn run test:unit:firefox:headless
        popd

        pushd packages/base-manager
        yarn run test:unit:firefox:headless
        popd

        pushd packages/controls
        yarn run test:unit:firefox:headless
        popd

        pushd packages/html-manager
        yarn run test:unit:firefox:headless
        popd

        pushd examples/web1
        yarn run test:firefox:headless
        popd

      env:
        CI: true
  python:
    name: Python
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11-dev']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}-${{hashFiles('**/requirements.txt')}}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install file://$PWD/python/ipywidgets#egg=ipywidgets[test]
    - name: Test with pytest
      run: |
        pip install pytest
        cd python/ipywidgets
        pytest --cov=ipywidgets ipywidgets
  spec:
    name: Message Specification
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}-${{hashFiles('**/requirements.txt')}}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install file://$PWD/python/ipywidgets#egg=ipywidgets
    - name: Compare spec with latest version
      run: |
        python ./packages/schema/generate-spec.py -f markdown spec.md
        diff -u ./packages/schema/jupyterwidgetmodels.latest.md ./spec.md
  ui-test:
    name: Visual Regression
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}-${{hashFiles('**/requirements.txt')}}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -U jupyterlab~=3.2 jupyter-packaging~=0.10

    - name: Install node
      uses: actions/setup-node@v3
      with:
        node-version: '14'
        cache: 'yarn'
        cache-dependency-path: |
          yarn.lock
          ui-tests/yarn.lock

    - name: Build and Install ipywidgets
      run: |
        yarn install --frozen-lockfile
        yarn run build

    - name: Build the extension
      run: |
        cd python/ipywidgets
        pip install .
        cd ../..
        jlpm install
        jlpm run build
        cd python/jupyterlab_widgets
        pwd
        pip install -e .
        jupyter labextension develop . --overwrite
        jupyter labextension list

    - name: Install Test Dependencies
      run: |
        cd ui-tests
        yarn install --frozen-lockfile
        yarn playwright install chromium

    - name: Launch JupyterLab
      run: |
        cd ui-tests
        yarn run start:detached

    - name: Wait for JupyterLab
      uses: ifaxity/wait-on-action@v1
      with:
        resource: http-get://localhost:8888/api
        timeout: 20000

    - name: Run UI Tests
      run: |
        cd ui-tests
        yarn run test

    - name: Upload Playwright Test assets
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: ipywidgets-test-assets
        path: |
          ui-tests/test-results

    - name: Upload Playwright Test report
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: ipywidgets-test-report
        path: |
          ui-tests/playwright-report

    - name: Update snapshots
      if: failure()
      run: |
        cd ui-tests
        yarn run test:update

    - name: Upload updated snapshots
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: ipywidgets-updated-snapshots
        path: ui-tests/tests
